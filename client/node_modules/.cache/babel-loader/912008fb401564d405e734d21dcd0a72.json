{"ast":null,"code":"var _jsxFileName = \"/home/bikrant/Desktop/mern/client/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  _s();\n\n  const [news, setNews] = useState({\n    heading: \"\",\n    author: \"\",\n    desc: \"\",\n    link: \"\",\n    linkname: \"\"\n  });\n  let x, val;\n\n  const handleInputs = e => {\n    x = e.target.name;\n    val = e.target.value;\n    setNews({ ...news,\n      [x]: val\n    });\n    console.log(x, \"**\", val);\n  }; //sending data to backend\n\n\n  const submitData = async e => {\n    e.preventDefault();\n    const {\n      heading,\n      author\n    } = news;\n    const response = await fetch('/register', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        phone,\n        work,\n        password,\n        cpassword\n      })\n    });\n    const data = await response.json();\n    console.log(data);\n\n    if (data.status === 422 || !data) {\n      window.alert('Invalid Registeration');\n    } else {\n      window.alert('Sucessfull Registeration');\n      history.push('/login');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"heading\",\n        placeholder: \"HEADING\",\n        value: news.heading,\n        onChange: handleInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"AUTHOR\",\n        value: news.author,\n        onChange: handleInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text-area\",\n        name: \"description\",\n        placeholder: \"DESCRIPTION\",\n        value: news.desc,\n        onChange: handleInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"link\",\n        placeholder: \"LINK\",\n        value: news.link,\n        onChange: handleInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"linkname\",\n        placeholder: \"LINKTEXT\",\n        value: news.linkname,\n        onChange: handleInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"submit\",\n      value: \"POST\",\n      onClick: submitData,\n      children: \"POST NEWS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"+8RBzkHgInCZUeOHOeX0nqhCdHM=\");\n\n_c = Post;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/bikrant/Desktop/mern/client/src/components/Post.js"],"names":["useState","Post","news","setNews","heading","author","desc","link","linkname","x","val","handleInputs","e","target","name","value","console","log","submitData","preventDefault","response","fetch","method","headers","body","JSON","stringify","email","phone","work","password","cpassword","data","json","status","window","alert","history","push","Page"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\n\nconst Post=()=>{\n    const [news,setNews]=useState({\n        heading:\"\",\n        author:\"\",\n        desc:\"\",\n        link:\"\",\n        linkname:\"\"\n    })\n\n    let x,val;\n\n\n    const handleInputs=(e)=>{\n        x=e.target.name;\n        val=e.target.value;\n\n        setNews({...news,[x]:val})\n        console.log(x,\"**\",val);\n    }\n\n        //sending data to backend\n        const submitData=async(e)=>{\n            e.preventDefault();\n            const {heading,author,}=news;\n    \n             const response=await fetch('/register',{\n                 method:\"POST\",\n                 headers:{\n                    \"Content-Type\":\"application/json\"\n                },\n                body:JSON.stringify({\n                    name,email,phone,work,password,cpassword\n                })\n             });\n    \n             \n             const data= await response.json();\n             console.log(data)\n             if(data.status===422 || !data){\n                 window.alert('Invalid Registeration');\n             }else{\n                window.alert('Sucessfull Registeration');\n                history.push('/login')\n             }\n        }\n    \n\n    return(\n        <React.Fragment>\n            <form method=\"POST\">\n            <input type=\"text\" name=\"heading\" placeholder=\"HEADING\" value={news.heading} onChange={handleInputs} />\n            <br/>\n            <input type=\"text\" name=\"email\" placeholder=\"AUTHOR\" value={news.author} onChange={handleInputs}/>\n            <br/>\n            <input type=\"text-area\" name=\"description\" placeholder=\"DESCRIPTION\" value={news.desc} onChange={handleInputs}/>\n            <br/>\n            <input type=\"text\" name=\"link\" placeholder=\"LINK\" value={news.link} onChange={handleInputs}/>\n            <br/>\n            <input type=\"text\" name=\"linkname\" placeholder=\"LINKTEXT\" value={news.linkname} onChange={handleInputs}/>\n            <br/>\n            </form>\n            <button type=\"submit\" className=\"submit\" value='POST' onClick={submitData}>POST NEWS</button>\n        </React.Fragment>\n    );\n}\n\n\nexport default Page;"]},"metadata":{},"sourceType":"module"}