{"ast":null,"code":"var _jsxFileName = \"/home/bikrant/Desktop/Inshorts/client/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from \"react\";\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  _s();\n\n  const [news, setNews] = useState({\n    heading: \"\",\n    author: \"\",\n    desc: \"\",\n    link: \"\",\n    linkname: \"\"\n  });\n  let x, val;\n  const history = useHistory();\n\n  const handleInputs = e => {\n    x = e.target.name;\n    val = e.target.value;\n    setNews({ ...news,\n      [x]: val\n    });\n  }; //sending data to backend\n\n\n  const submitData = async e => {\n    e.preventDefault();\n    const {\n      heading,\n      author,\n      desc,\n      link,\n      linkname\n    } = news;\n    const response = await fetch('/home', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        heading,\n        author,\n        desc,\n        link,\n        linkname\n      })\n    });\n    const data = await response.json();\n\n    if (data.status === 422 || !data) {\n      window.alert('Error in posting data');\n    } else {\n      window.alert('Sucessfully posted');\n      history.push('/home');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"heading\",\n        placeholder: \"HEADING\",\n        value: news.heading,\n        onChange: handleInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"author\",\n        placeholder: \"AUTHOR\",\n        value: news.author,\n        onChange: handleInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text-area\",\n        name: \"desc\",\n        placeholder: \"DESCRIPTION\",\n        value: news.desc,\n        onChange: handleInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"link\",\n        placeholder: \"LINK\",\n        value: news.link,\n        onChange: handleInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"linkname\",\n        placeholder: \"LINKTEXT\",\n        value: news.linkname,\n        onChange: handleInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"genre\",\n        placeholder: \"GENRE\",\n        value: news.linkname,\n        onChange: handleInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"submit\",\n      value: \"POST\",\n      onClick: submitData,\n      children: \"POST NEWS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"3YRyDNxWSz/ARa2vqXsRiwa7m+4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/bikrant/Desktop/Inshorts/client/src/components/Post.js"],"names":["React","useState","useHistory","Post","news","setNews","heading","author","desc","link","linkname","x","val","history","handleInputs","e","target","name","value","submitData","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","status","window","alert","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from \"react\"\nimport { useHistory } from 'react-router';\nconst Post=()=>{\n    const [news,setNews]=useState({\n        heading:\"\",\n        author:\"\",\n        desc:\"\",\n        link:\"\",    \n        linkname:\"\",\n        \n    })\n\n    let x,val;\n    const history=useHistory();\n\n    const handleInputs=(e)=>{\n        x=e.target.name;\n        val=e.target.value;\n        setNews({...news,[x]:val})\n    }  \n\n        //sending data to backend\n    const submitData=async(e)=>{\n        e.preventDefault();\n        const {heading,author,desc,link,linkname}=news;\n         const response=await fetch('/home',{\n                method:\"POST\",\n                headers:{\n                    \"Content-Type\":\"application/json\"\n                },\n                body:JSON.stringify({\n                    heading,author,desc,link,linkname\n                })\n             });\n    \n             \n\n            const data=await response.json()\n            \n             if(data.status===422 || !data){\n                 window.alert('Error in posting data');\n             }else{\n                window.alert('Sucessfully posted');\n                history.push('/home');\n             }\n        }\n    \n\n    return(\n        <React.Fragment>\n            <form method=\"POST\">\n            <input type=\"text\" name=\"heading\" placeholder=\"HEADING\" value={news.heading} onChange={handleInputs} />\n            <br/>\n            <input type=\"text\" name=\"author\" placeholder=\"AUTHOR\" value={news.author} onChange={handleInputs}/>\n            <br/>\n            <input type=\"text-area\" name=\"desc\" placeholder=\"DESCRIPTION\" value={news.desc} onChange={handleInputs}/>\n            <br/>\n            <input type=\"text\" name=\"link\" placeholder=\"LINK\" value={news.link} onChange={handleInputs}/>\n            <br/>\n            <input type=\"text\" name=\"linkname\" placeholder=\"LINKTEXT\" value={news.linkname} onChange={handleInputs}/>\n            <br/>\n            <input type=\"text\" name=\"genre\" placeholder=\"GENRE\" value={news.linkname} onChange={handleInputs}/>\n            <br/>            \n            </form>\n            <button type=\"submit\" className=\"submit\" value='POST' onClick={submitData}>POST NEWS</button>\n        </React.Fragment>\n    );\n}\n\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}